# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import bot_comm_pb2 as bot__comm__pb2
import statistics_pb2 as statistics__pb2
import transaction_pb2 as transaction__pb2


class StatisticsServiceCommunicatorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAllUserTransactions = channel.unary_unary(
                '/StatisticsServiceCommunicator/GetAllUserTransactions',
                request_serializer=bot__comm__pb2.BotsDataRequest.SerializeToString,
                response_deserializer=transaction__pb2.TransactionsExtended.FromString,
                )
        self.GetBotTransactions = channel.unary_unary(
                '/StatisticsServiceCommunicator/GetBotTransactions',
                request_serializer=bot__comm__pb2.BotRequest.SerializeToString,
                response_deserializer=transaction__pb2.TransactionsExtended.FromString,
                )
        self.GetBotStatistics = channel.unary_unary(
                '/StatisticsServiceCommunicator/GetBotStatistics',
                request_serializer=bot__comm__pb2.BotRequest.SerializeToString,
                response_deserializer=statistics__pb2.BotStatistics.FromString,
                )
        self.GetBotsOverallStatistics = channel.unary_unary(
                '/StatisticsServiceCommunicator/GetBotsOverallStatistics',
                request_serializer=bot__comm__pb2.BotsDataRequest.SerializeToString,
                response_deserializer=statistics__pb2.OverallStatistics.FromString,
                )
        self.GetUserAssets = channel.unary_unary(
                '/StatisticsServiceCommunicator/GetUserAssets',
                request_serializer=bot__comm__pb2.BotsDataRequest.SerializeToString,
                response_deserializer=statistics__pb2.UserAssets.FromString,
                )


class StatisticsServiceCommunicatorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAllUserTransactions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBotTransactions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBotStatistics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBotsOverallStatistics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserAssets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StatisticsServiceCommunicatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAllUserTransactions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllUserTransactions,
                    request_deserializer=bot__comm__pb2.BotsDataRequest.FromString,
                    response_serializer=transaction__pb2.TransactionsExtended.SerializeToString,
            ),
            'GetBotTransactions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBotTransactions,
                    request_deserializer=bot__comm__pb2.BotRequest.FromString,
                    response_serializer=transaction__pb2.TransactionsExtended.SerializeToString,
            ),
            'GetBotStatistics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBotStatistics,
                    request_deserializer=bot__comm__pb2.BotRequest.FromString,
                    response_serializer=statistics__pb2.BotStatistics.SerializeToString,
            ),
            'GetBotsOverallStatistics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBotsOverallStatistics,
                    request_deserializer=bot__comm__pb2.BotsDataRequest.FromString,
                    response_serializer=statistics__pb2.OverallStatistics.SerializeToString,
            ),
            'GetUserAssets': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserAssets,
                    request_deserializer=bot__comm__pb2.BotsDataRequest.FromString,
                    response_serializer=statistics__pb2.UserAssets.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'StatisticsServiceCommunicator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StatisticsServiceCommunicator(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAllUserTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StatisticsServiceCommunicator/GetAllUserTransactions',
            bot__comm__pb2.BotsDataRequest.SerializeToString,
            transaction__pb2.TransactionsExtended.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBotTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StatisticsServiceCommunicator/GetBotTransactions',
            bot__comm__pb2.BotRequest.SerializeToString,
            transaction__pb2.TransactionsExtended.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBotStatistics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StatisticsServiceCommunicator/GetBotStatistics',
            bot__comm__pb2.BotRequest.SerializeToString,
            statistics__pb2.BotStatistics.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBotsOverallStatistics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StatisticsServiceCommunicator/GetBotsOverallStatistics',
            bot__comm__pb2.BotsDataRequest.SerializeToString,
            statistics__pb2.OverallStatistics.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserAssets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StatisticsServiceCommunicator/GetUserAssets',
            bot__comm__pb2.BotsDataRequest.SerializeToString,
            statistics__pb2.UserAssets.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
