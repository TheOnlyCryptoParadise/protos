# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import bot_comm_pb2 as bot__comm__pb2
import bot_manager_pb2 as bot__manager__pb2


class BotManagerCommunicatorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateBot = channel.unary_unary(
                '/BotManagerCommunicator/CreateBot',
                request_serializer=bot__manager__pb2.CreateBotRequest.SerializeToString,
                response_deserializer=bot__manager__pb2.CreateBotResponse.FromString,
                )
        self.RemoveBot = channel.unary_unary(
                '/BotManagerCommunicator/RemoveBot',
                request_serializer=bot__comm__pb2.BotRequest.SerializeToString,
                response_deserializer=bot__comm__pb2.BotResponse.FromString,
                )
        self.ResumeBot = channel.unary_unary(
                '/BotManagerCommunicator/ResumeBot',
                request_serializer=bot__comm__pb2.BotRequest.SerializeToString,
                response_deserializer=bot__comm__pb2.BotResponse.FromString,
                )
        self.PauseBot = channel.unary_unary(
                '/BotManagerCommunicator/PauseBot',
                request_serializer=bot__comm__pb2.BotRequest.SerializeToString,
                response_deserializer=bot__comm__pb2.BotResponse.FromString,
                )
        self.StopBot = channel.unary_unary(
                '/BotManagerCommunicator/StopBot',
                request_serializer=bot__comm__pb2.BotRequest.SerializeToString,
                response_deserializer=bot__comm__pb2.BotResponse.FromString,
                )
        self.RenameBot = channel.unary_unary(
                '/BotManagerCommunicator/RenameBot',
                request_serializer=bot__manager__pb2.UpdateStrRequest.SerializeToString,
                response_deserializer=bot__comm__pb2.BotResponse.FromString,
                )
        self.UpdateBotDescription = channel.unary_unary(
                '/BotManagerCommunicator/UpdateBotDescription',
                request_serializer=bot__manager__pb2.UpdateStrRequest.SerializeToString,
                response_deserializer=bot__comm__pb2.BotResponse.FromString,
                )
        self.GetBotsStatuses = channel.unary_unary(
                '/BotManagerCommunicator/GetBotsStatuses',
                request_serializer=bot__comm__pb2.BotsDataRequest.SerializeToString,
                response_deserializer=bot__manager__pb2.BotsStatusesResponse.FromString,
                )
        self.GetBotsNames = channel.unary_unary(
                '/BotManagerCommunicator/GetBotsNames',
                request_serializer=bot__comm__pb2.BotsDataRequest.SerializeToString,
                response_deserializer=bot__manager__pb2.BotsNamesResponse.FromString,
                )
        self.GetBotInfo = channel.unary_unary(
                '/BotManagerCommunicator/GetBotInfo',
                request_serializer=bot__comm__pb2.BotRequest.SerializeToString,
                response_deserializer=bot__manager__pb2.BotInfoResponse.FromString,
                )
        self.GetFullInfo = channel.unary_unary(
                '/BotManagerCommunicator/GetFullInfo',
                request_serializer=bot__comm__pb2.BotsDataRequest.SerializeToString,
                response_deserializer=bot__manager__pb2.FullInfoResponse.FromString,
                )
        self.Ping = channel.unary_unary(
                '/BotManagerCommunicator/Ping',
                request_serializer=bot__comm__pb2.Empty.SerializeToString,
                response_deserializer=bot__comm__pb2.Empty.FromString,
                )
        self.GetBotAddress = channel.unary_unary(
                '/BotManagerCommunicator/GetBotAddress',
                request_serializer=bot__comm__pb2.BotRequest.SerializeToString,
                response_deserializer=bot__manager__pb2.BotStatusAddressResponse.FromString,
                )


class BotManagerCommunicatorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateBot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveBot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResumeBot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PauseBot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopBot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameBot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBotDescription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBotsStatuses(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBotsNames(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBotInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFullInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBotAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BotManagerCommunicatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateBot': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBot,
                    request_deserializer=bot__manager__pb2.CreateBotRequest.FromString,
                    response_serializer=bot__manager__pb2.CreateBotResponse.SerializeToString,
            ),
            'RemoveBot': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveBot,
                    request_deserializer=bot__comm__pb2.BotRequest.FromString,
                    response_serializer=bot__comm__pb2.BotResponse.SerializeToString,
            ),
            'ResumeBot': grpc.unary_unary_rpc_method_handler(
                    servicer.ResumeBot,
                    request_deserializer=bot__comm__pb2.BotRequest.FromString,
                    response_serializer=bot__comm__pb2.BotResponse.SerializeToString,
            ),
            'PauseBot': grpc.unary_unary_rpc_method_handler(
                    servicer.PauseBot,
                    request_deserializer=bot__comm__pb2.BotRequest.FromString,
                    response_serializer=bot__comm__pb2.BotResponse.SerializeToString,
            ),
            'StopBot': grpc.unary_unary_rpc_method_handler(
                    servicer.StopBot,
                    request_deserializer=bot__comm__pb2.BotRequest.FromString,
                    response_serializer=bot__comm__pb2.BotResponse.SerializeToString,
            ),
            'RenameBot': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameBot,
                    request_deserializer=bot__manager__pb2.UpdateStrRequest.FromString,
                    response_serializer=bot__comm__pb2.BotResponse.SerializeToString,
            ),
            'UpdateBotDescription': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBotDescription,
                    request_deserializer=bot__manager__pb2.UpdateStrRequest.FromString,
                    response_serializer=bot__comm__pb2.BotResponse.SerializeToString,
            ),
            'GetBotsStatuses': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBotsStatuses,
                    request_deserializer=bot__comm__pb2.BotsDataRequest.FromString,
                    response_serializer=bot__manager__pb2.BotsStatusesResponse.SerializeToString,
            ),
            'GetBotsNames': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBotsNames,
                    request_deserializer=bot__comm__pb2.BotsDataRequest.FromString,
                    response_serializer=bot__manager__pb2.BotsNamesResponse.SerializeToString,
            ),
            'GetBotInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBotInfo,
                    request_deserializer=bot__comm__pb2.BotRequest.FromString,
                    response_serializer=bot__manager__pb2.BotInfoResponse.SerializeToString,
            ),
            'GetFullInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFullInfo,
                    request_deserializer=bot__comm__pb2.BotsDataRequest.FromString,
                    response_serializer=bot__manager__pb2.FullInfoResponse.SerializeToString,
            ),
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=bot__comm__pb2.Empty.FromString,
                    response_serializer=bot__comm__pb2.Empty.SerializeToString,
            ),
            'GetBotAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBotAddress,
                    request_deserializer=bot__comm__pb2.BotRequest.FromString,
                    response_serializer=bot__manager__pb2.BotStatusAddressResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'BotManagerCommunicator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BotManagerCommunicator(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateBot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BotManagerCommunicator/CreateBot',
            bot__manager__pb2.CreateBotRequest.SerializeToString,
            bot__manager__pb2.CreateBotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveBot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BotManagerCommunicator/RemoveBot',
            bot__comm__pb2.BotRequest.SerializeToString,
            bot__comm__pb2.BotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResumeBot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BotManagerCommunicator/ResumeBot',
            bot__comm__pb2.BotRequest.SerializeToString,
            bot__comm__pb2.BotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PauseBot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BotManagerCommunicator/PauseBot',
            bot__comm__pb2.BotRequest.SerializeToString,
            bot__comm__pb2.BotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopBot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BotManagerCommunicator/StopBot',
            bot__comm__pb2.BotRequest.SerializeToString,
            bot__comm__pb2.BotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameBot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BotManagerCommunicator/RenameBot',
            bot__manager__pb2.UpdateStrRequest.SerializeToString,
            bot__comm__pb2.BotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBotDescription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BotManagerCommunicator/UpdateBotDescription',
            bot__manager__pb2.UpdateStrRequest.SerializeToString,
            bot__comm__pb2.BotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBotsStatuses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BotManagerCommunicator/GetBotsStatuses',
            bot__comm__pb2.BotsDataRequest.SerializeToString,
            bot__manager__pb2.BotsStatusesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBotsNames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BotManagerCommunicator/GetBotsNames',
            bot__comm__pb2.BotsDataRequest.SerializeToString,
            bot__manager__pb2.BotsNamesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBotInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BotManagerCommunicator/GetBotInfo',
            bot__comm__pb2.BotRequest.SerializeToString,
            bot__manager__pb2.BotInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFullInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BotManagerCommunicator/GetFullInfo',
            bot__comm__pb2.BotsDataRequest.SerializeToString,
            bot__manager__pb2.FullInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BotManagerCommunicator/Ping',
            bot__comm__pb2.Empty.SerializeToString,
            bot__comm__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBotAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BotManagerCommunicator/GetBotAddress',
            bot__comm__pb2.BotRequest.SerializeToString,
            bot__manager__pb2.BotStatusAddressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
