syntax = "proto3";

import "bot_comm.proto";

service TransactionCommunicator{
  rpc BotStopped(BotRequest) returns(BotResponse);
  rpc BotRemoved(BotRequest) returns(BotResponse);
  rpc OpenTrades(BotAddress) returns(BotResponse);
}

message BotAddress{
  uint64 botId = 1;
  string botAddress = 2;
}

enum TransactionType{
  TO_BUY = 0;
  TO_SELL = 1;
  STOP_LOSS_SELL = 2;

}

message TransactionDetails{
  string pair = 1;
  double amount = 2;
  double price = 3;
  TransactionType type = 4;
  optional OperationStatus status = 5;
}

message Transaction{
  uint64 botId = 1;
  uint64 userId = 2;
  int32 timeout = 3;
  string exchange = 4;
  TransactionDetails details = 5;
}

message Transactions {
    uint64 botId = 1;
    repeated Transaction trades = 2;
}

message TransactionExtended {
  Transaction transaction = 1;
  float cost = 2;
  float currentRate = 3;
  float profit = 4;
  string date = 5;
}

message TransactionsExtended {
    repeated TransactionExtended trades = 1;
}

message Trade {
  uint64 userId = 1;
  uint64 botId = 2;
  string pair = 3;
  double amount = 4;
  float profit = 5;
  string buyDate = 6;
  string sellDate = 7;
  float buyValue = 8;
  float sellValue = 9;
}

message Trades {
  repeated Trade trades = 1;
}
